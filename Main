#include <MCUFRIEND_kbv.h>
#include <TouchScreen.h>

///////////////////  Multiplex Control pins
// Mux control pins
int s0 = 28;   // Digital pin1
int s1 = 29;   // Digital pin2
int s2 = 30;   // Digital pin3
int s3 = 31;   // Digital pin4

// Mux in "SIG" pin
int SIG_pin = 15; // A Input pin
/////////////////// TFT Control pins

#define LCD_CS A3
#define LCD_CD A2
#define LCD_WR A1
#define LCD_RD A0
#define LCD_RESET A4

MCUFRIEND_kbv tft;

#define TS_MINX 150
#define TS_MINY 120
#define TS_MAXX 920
#define TS_MAXY 940

#define YP A1
#define XM A2
#define YM 7
#define XP 6

// Color definitions
#define BLACK   0x0000
#define BLUE    0x001F
#define RED     0xF800
#define GREEN   0x07E0
#define CYAN    0x07FF
#define MAGENTA 0xF81F
#define YELLOW  0xFFE0
#define WHITE   0xFFFF

TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);

void setup() {
  // Setup Output pins
  pinMode(s0, OUTPUT); 
  pinMode(s1, OUTPUT); 
  pinMode(s2, OUTPUT); 
  pinMode(s3, OUTPUT); 
  // Set all digital pins to low state
  digitalWrite(s0, LOW);
  digitalWrite(s1, LOW);
  digitalWrite(s2, LOW);
  digitalWrite(s3, LOW);

  Serial.begin(9600);

  uint16_t ID = tft.readID();
  tft.begin(ID);

  tft.setRotation(1);  // Landscape orientation
  
  tft.fillScreen(BLUE);
  tft.setTextColor(WHITE);
  tft.setTextSize(2);
  tft.setCursor(10, 10);
  tft.print("Hello, Arduino!");

  pinMode(XM, OUTPUT);
  pinMode(YP, OUTPUT);
}

void loop() {
  // Read touchscreen coordinates
  TSPoint p = ts.getPoint();

  if (p.z > 10) {
    Serial.print("X = "); 
    Serial.print(p.x);
    Serial.print("\tY = "); 
    Serial.println(p.y);
  }
  //Loop through and read all 16 values
  for(int i = 0; i < 16; i ++){
    Serial.print("Temperature at channel: ");
    Serial.print(i);
    Serial.print(" is : ");
    Serial.print(readMux(i));
    Serial.println(" degrees celcius");
    delay(1000);
  }
}



/*   int channel = 1; // Read from channel 1
   Serial.print("Temperature at channel: ");
   Serial.print(channel);
   Serial.print(" is : ");
   Serial.print(readMux(channel));
   Serial.println(" degrees Celsius");
   delay(1000);
 }*/

int readMux(int channel) {
  int controlPin[] = {s0, s1, s2, s3};

  int muxChannel[16][4]={
    {0,0,0,0}, //channel 0
    {1,0,0,0}, //channel 1
    {0,1,0,0}, //channel 2
    {1,1,0,0}, //channel 3
    {0,0,1,0}, //channel 4
    {1,0,1,0}, //channel 5
    {0,1,1,0}, //channel 6
    {1,1,1,0}, //channel 7
    {0,0,0,1}, //channel 8
    {1,0,0,1}, //channel 9
    {0,1,0,1}, //channel 10
    {1,1,0,1}, //channel 11
    {0,0,1,1}, //channel 12
    {1,0,1,1}, //channel 13
    {0,1,1,1}, //channel 14
    {1,1,1,1}  //channel 15
  };

  // Loop through the 4 sig
  for(int i = 0; i < 4; i ++) {
    digitalWrite(controlPin[i], muxChannel[channel][i]);
  }

  // Read the value at the SIG pin
  int val = analogRead(SIG_pin);
  float temp = val * 0.09746588694; // Conv. Const.

  // Return the value
  Serial.print(temp);
  return temp;
}
